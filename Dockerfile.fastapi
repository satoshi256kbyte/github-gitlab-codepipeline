FROM public.ecr.aws/amazonlinux/amazonlinux:2023

# Python3とpipをインストール
RUN yum update -y && \
    yum install -y python3 python3-pip && \
    pip3 install fastapi uvicorn

# アプリケーションファイルを作成
COPY <<EOF /app/main.py
from fastapi import FastAPI, Request
import uvicorn
import datetime
import logging
import json
import os

# ログ設定
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger("ecs_fastapi_app")

app = FastAPI()

@app.middleware("http")
async def log_requests(request: Request, call_next):
    start_time = datetime.datetime.utcnow()
    response = await call_next(request)
    process_time = (datetime.datetime.utcnow() - start_time).total_seconds()
    
    log_data = {
        "method": request.method,
        "url": str(request.url),
        "status_code": response.status_code,
        "process_time": process_time,
        "client_ip": request.client.host if request.client else "unknown"
    }
    logger.info(f"Request processed: {json.dumps(log_data)}")
    return response

@app.get("/health")
def health():
    logger.info("Health check requested")
    return {
        "status": "healthy",
        "timestamp": datetime.datetime.utcnow().isoformat(),
        "service": "ECS",
        "environment": os.environ.get("ENVIRONMENT", "unknown")
    }

@app.get("/version")
def version():
    logger.info("Version info requested")
    return {
        "version": "1.0.0",
        "build_time": datetime.datetime.utcnow().isoformat(),
        "commit_hash": "placeholder",
        "service": "ECS"
    }

@app.get("/api/items")
def get_items():
    logger.info("Items list requested")
    return [
        {
            "id": 1,
            "name": "ECS Sample Item",
            "description": "This is a sample item from ECS",
            "created_at": datetime.datetime.utcnow().isoformat()
        }
    ]

if __name__ == "__main__":
    logger.info("Starting FastAPI application on ECS")
    uvicorn.run(app, host="0.0.0.0", port=8000, log_level="info")
EOF

WORKDIR /app
EXPOSE 8000
CMD ["python3", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--log-level", "info"]
