Description: Comparison CI/CD Pipeline Configuration

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Service Configuration
        Parameters:
          - ServiceName
          - StageName
      - Label:
          default: Git Configuration
        Parameters:
          - ConnectionArn
          - RepositoryId
          - BranchName

Parameters:
  ServiceName:
    Description: Name of the service
    Type: String
    Default: comparison

  StageName:
    Description: Deployment stage for environment separation
    Type: String
    AllowedValues:
      - local
      - dev
      - stg
      - prod
    Default: local

  ConnectionArn:
    Description: GitHub connection ARN
    Type: String
    Default: "arn:aws:codeconnections:ap-northeast-1:xxxxxxxxx:connection/xxxxxxxxx"

  RepositoryId:
    Description: GitHub repository ID
    Type: String
    Default: "satoshi256kbyte/github-gitlab-codepipeline"

  BranchName:
    Description: GitHub branch name
    Type: String
    Default: "main"

Mappings:
  CodeBuildImages:
    Standard:
      Image: aws/codebuild/standard:7.0
      ComputeType: BUILD_GENERAL1_SMALL

Conditions:
  IsStgOrProd: !Or
    - !Equals
      - !Ref StageName
      - stg
    - !Equals
      - !Ref StageName
      - prod

Resources:
  BridgeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ServiceName}-${StageName}-${AWS::AccountId}-bridge-bucket
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${StageName}-${AWS::AccountId}-bridge-bucket
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StageName
          Value: !Ref StageName

  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ServiceName}-${StageName}-${AWS::AccountId}-artifact-bucket
      VersioningConfiguration:
        Status: Suspended
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${StageName}-${AWS::AccountId}-artifact-bucket
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StageName
          Value: !Ref StageName

  CheckCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ServiceName}-${StageName}-check
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - echo "Default buildspec - should be overridden"
            build:
              commands:
                - echo "This buildspec should be overridden by CodePipeline action"
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: S3
        Location: !Sub "${BridgeBucket}/cache/check"
      Environment:
        ComputeType: !FindInMap
          - CodeBuildImages
          - Standard
          - ComputeType
        Image: !FindInMap
          - CodeBuildImages
          - Standard
          - Image
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: SERVICE_NAME
            Value: !Ref ServiceName
          - Name: STAGE_NAME
            Value: !Ref StageName
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${StageName}-check
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StageName
          Value: !Ref StageName

  # Build and Deploy CodeBuild Project (共通)
  DeployCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ServiceName}-${StageName}-deploy
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - echo "Default buildspec - should be overridden"
            build:
              commands:
                - echo "This buildspec should be overridden by CodePipeline action"
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: S3
        Location: !Sub "${BridgeBucket}/cache/deploy"
      Environment:
        ComputeType: !FindInMap
          - CodeBuildImages
          - Standard
          - ComputeType
        Image: !FindInMap
          - CodeBuildImages
          - Standard
          - Image
        Type: LINUX_CONTAINER
        PrivilegedMode: true # ECRプッシュに必要
        EnvironmentVariables:
          - Name: SERVICE_NAME
            Value: !Ref ServiceName
          - Name: STAGE_NAME
            Value: !Ref StageName
          - Name: SAM_S3_BUCKET
            Value: !Ref PipelineArtifactBucket
          - Name: SAM_S3_PREFIX
            Value: !Sub ${ServiceName}-${StageName}
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${StageName}-deploy
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StageName
          Value: !Ref StageName

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ServiceName}-${StageName}-codebuild-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
        - arn:aws:iam::aws:policy/AmazonCodeGuruSecurityScanAccess
      Policies:
        - PolicyName: !Sub ${ServiceName}-${StageName}-codebuild-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub "arn:aws:s3:::${BridgeBucket}/*"
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${BridgeBucket}"
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${StageName}-codebuild-role
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StageName
          Value: !Ref StageName

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ServiceName}-${StageName}-codepipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStores:
        - Region: !Ref AWS::Region
          ArtifactStore:
            Type: S3
            Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref RepositoryId
                BranchName: !Ref BranchName
              RunOrder: 1
        - Name: Check
          Actions:
            - Name: Prepare
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: PrepareOutput
              Configuration:
                ProjectName: !Ref CheckCodeBuildProject
                BuildspecOverride: cicd/buildspecs/prepare.yml
              RunOrder: 1
            - Name: SCA
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: InspectorScan
                Version: 1
              InputArtifacts:
                - Name: PrepareOutput
              OutputArtifacts:
                - Name: InspectorScanOutput
              Configuration:
                InspectorRunMode: SourceCodeScan
                CriticalThreshold: 1
              RunOrder: 2
            - Name: Lint
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref CheckCodeBuildProject
                BuildspecOverride: cicd/buildspecs/lint.yml
              RunOrder: 2
            - Name: UnitTest
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref CheckCodeBuildProject
                BuildspecOverride: cicd/buildspecs/unit_test.yml
              RunOrder: 2
            - Name: SAST
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: SASTScanOutput
              Configuration:
                ProjectName: !Ref CheckCodeBuildProject
                BuildspecOverride: cicd/buildspecs/sast.yml
              RunOrder: 2
        - Name: Deploy
          Actions:
            - Name: SamDeploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref DeployCodeBuildProject
                BuildspecOverride: cicd/buildspecs/sam_deploy.yml
              RunOrder: 1
            - Name: EC2Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ApplicationName: !Sub ${ServiceName}-${StageName}-codedeploy-application
                DeploymentGroupName: !Sub ${ServiceName}-${StageName}-codedeploy-deployment-group
              RunOrder: 1
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${StageName}-codepipeline
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StageName
          Value: !Ref StageName

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ServiceName}-${StageName}-codepipeline-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - codepipeline:*
                  - codedeploy:*
                  - s3:*
                  - codestar-connections:UseConnection
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - inspector-scan:ScanSbom
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/cicd/${ServiceName}-${StageName}-codepipeline*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt CodeBuildServiceRole.Arn
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${StageName}-codepipeline-role
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StageName
          Value: !Ref StageName

  #----------------------------------------
  # IAM Role for CodeDeploy
  # CodeDeployに付与するIAMロール
  # デプロイを実行するため、EC2インスタンスを操作するための権限を持ちます
  #----------------------------------------
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ServiceName}-${StageName}-codedeploy-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      Policies:
        - PolicyName: !Sub ${ServiceName}-${StageName}-codedeploy-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                  - autoscaling:*
                  - ec2:*
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${StageName}-codedeploy-role
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StageName
          Value: !Ref StageName

  #----------------------------------------
  # CodeDeploy
  # CodeDeployのアプリケーション
  #----------------------------------------
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub ${ServiceName}-${StageName}-codedeploy-application
      ComputePlatform: Server
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${StageName}-codedeploy-application
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StageName
          Value: !Ref StageName

  #----------------------------------------
  # CodeDeploy
  # CodeDeployのデプロイグループ
  #----------------------------------------
  CodeDeployGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      DeploymentGroupName: !Sub ${ServiceName}-${StageName}-codedeploy-deployment-group
      ApplicationName: !Ref CodeDeployApplication
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - DEPLOYMENT_FAILURE
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      Ec2TagFilters:
        - Key: ServiceName
          Value: !Ref ServiceName
          Type: KEY_AND_VALUE
        - Key: StageName
          Value: !Ref StageName
          Type: KEY_AND_VALUE
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${StageName}-codedeploy-deployment-group
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StageName
          Value: !Ref StageName
